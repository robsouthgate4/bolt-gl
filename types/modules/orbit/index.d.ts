import { Node } from "../../";
export default class Orbit {
    private _mouseDown;
    private _mouseXOnDown;
    private _mouseYOnDown;
    private _azimuthStart;
    private _elevationStart;
    private _radius;
    private _initialSpherical;
    private _shiftKeyDown;
    private _node;
    private _offset;
    private _target;
    private _forward;
    private _up;
    private _ease;
    private _sphericalTarget;
    private _sphericalCurrent;
    private hasPannedOnce;
    private _panTarget;
    private _panStart;
    private _panSpeed;
    private _zoomSpeed;
    private _rotateSpeed;
    private _minElevation;
    private _maxElevation;
    private _minAzimuth;
    private _maxAzimuth;
    private _minRadius;
    private _maxRadius;
    private _eventListeners;
    private _disableOrbit;
    constructor(node: Node, { panSpeed, rotateSpeed, ease, zoomSpeed, minRadius, maxRadius, minElevation, maxElevation, minAzimuth, maxAzimuth, disableOrbit, }?: {
        panSpeed?: number | undefined;
        rotateSpeed?: number | undefined;
        ease?: number | undefined;
        zoomSpeed?: number | undefined;
        minRadius?: number | undefined;
        maxRadius?: number | undefined;
        minElevation?: number | undefined;
        maxElevation?: number | undefined;
        minAzimuth?: number | undefined;
        maxAzimuth?: number | undefined;
        disableOrbit?: boolean | undefined;
    });
    private _initListeners;
    private _handleKeyDown;
    private _handleKeyUp;
    private _handleWheel;
    private _handleMouseDown;
    private _handleMouseMove;
    private _handleMouseUp;
    private _cartesianToSpherical;
    private _spherialToCartesian;
    update(): void;
    get node(): Node;
    set node(value: Node);
    get radius(): number;
    set radius(value: number);
    get rotateSpeed(): number;
    set rotateSpeed(value: number);
    get zoomSpeed(): number;
    set zoomSpeed(value: number);
    get panSpeed(): number;
    set panSpeed(value: number);
    get maxAzimuth(): number;
    set maxAzimuth(value: number);
    get minAzimuth(): number;
    set minAzimuth(value: number);
    get minElevation(): number;
    set minElevation(value: number);
    get maxElevation(): number;
    set maxElevation(value: number);
}
